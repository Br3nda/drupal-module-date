<?php
// $Id: date_api.install,v 1.24 2009/12/13 19:37:00 karens Exp $
function date_api_set_variables() {
  /**
   * Set absolute minimum and maximum year for dates on this site.
   *
   * There is actually no maximum and minimum year in PHP 5, but a date with
   * a year less than 0 would result in negative ISO and DATETIME dates,
   * like -1250-01-01T00:00:00, which probably won't make sense or work
   * correctly anywhere.
   * 
   * The odd construct of using variable_get() instead of variable_set()
   * is so we don't accidentally write over an existing value. If
   * no value is set, variable_get() will set it.
   */
  variable_get('date_max_year', 4000);
  variable_get('date_min_year', 1);
  variable_get('date_php_min_year', 1901);

  /**
   * Set an API version in a way that other modules can test for compatibility.
   */
  variable_set('date_api_version', '7.2');
}

/**
 * Implementation of hook_install().
 */
function date_api_install() {

  // date_api_set_variables can install date_timezone and date_php4.  The
  // date_timezone_install() function does a module_enable('date_api').  This
  // means that date_api_enable() can be called before date_api_install()
  // finishes!  So the date_api schema needs to be installed before this line!
  date_api_set_variables();
  $ret = array();
  return $ret;
}

/**
 * Implementation of hook_enable().
 */
function date_api_enable() {
  date_api_set_variables();

}

/**
 * Implementation of hook_uninstall().
 */
function date_api_uninstall() {
  $ret = array();
  
  cache_clear_all('date_timezone_identifiers_list', 'cache');
  $variables = array(
    'date_api_version',
    'date_min_year',
    'date_max_year',
    'date_php_min_year',
    'date_db_tz_support',
    );
  foreach ($variables as $variable) {
    variable_del($variable);
  }

  if (db_table_exists('views_display')) {
    $displays = array(
      'date_nav', 
    );
    db_query("DELETE FROM {views_display} WHERE display_plugin IN ('". implode("','", $displays) ."')");
    db_query("DELETE FROM {cache_views}");
  }

  return $ret;
}

/**
 * Make sure all the appropriate modules get enabled.
 * Repeated again just to be sure they are set.
 */
function date_api_update_6000() {
  $ret = array();
  // don't attempt to upgrade if views is not yet upgraded.
  if (module_exists('views') && drupal_get_installed_schema_version('views', TRUE) < 6000) {
    $ret = array();
    drupal_set_message(t('date module cannot be updated until after Views has been updated. Please return to <a href="@update-php">update.php</a> and run the remaining updates. ', array('@update-php' => base_path() . 'update.php?op=selection')), 'warning', FALSE);
    $ret['#abort'] = array('success' => FALSE, 'query' => t('date.module has updates, but cannot be updated until views.module is updated first.'));
    
    return $ret;
  }
  date_api_set_variables();
  return $ret;
}

/**
 * Rebuild the theme registry and all the caches.
 * needed to pick up changes created by updated Views API.
 */
function date_api_update_6001() {
  $ret = array();
  if (db_table_exists('cache_content')) {
    db_query('DELETE FROM {cache_content}');
  }
  if (db_table_exists('cache_views')) {
    db_query('DELETE FROM {cache_views}');
  }
  if (db_table_exists('views_object_cache')) {
    db_query('DELETE FROM {views_object_cache}');
  }    
  db_query("DELETE FROM {cache} where cid LIKE 'theme_registry%'");
  return $ret;
}

/**
 * Create new date format tables.
 */
function date_api_update_6002() {
  $ret = array();
  return $ret;
}

function date_api_update_6003() {
  $ret = array();
  return $ret;
}

/**
 * The "date_format" table is missing on boxes having MySQL 5.0.67 installed.
 * There seems to be a bug in MySQL that prevents the creation of tables with
 * a name "date_format" and indexes with the name "format".
 * 
 * We rename the table and index as a workaround.
 */
function date_api_update_6004() {
  $ret = array();
  return $ret;  
}

/**
 * Make sure MYSQL does not stupidly do case-insensitive 
 * searches and indexes on our formats.
 * @see http://pure.rednoize.com/2006/11/26/mysql-collation-matters-when-using-unique-indexes/
 * @see http://jjinux.blogspot.com/2009/03/mysql-case-sensitivity-hell.html
 * @see http://dev.mysql.com/doc/refman/5.0/en/case-sensitivity.html
 */
function date_api_update_6005() {
  global $db_type;
  $ret = array();
  return $ret;
}

// TODO Update custom formats to new system module format table.