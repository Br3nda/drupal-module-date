<?php
// $Id: date_timezone.module,v 1.8.2.5 2008/03/11 10:36:19 karens Exp $
/**
 * @file
 * This module will make the alter the user and site timezone forms to
 * select a timezone name instead of a timezone offset.
 *
 * This module won't be needed once core starts tracking timezone names
 * instead of offsets.
 */

/**
 * Make sure a timezone has been selected.
 */
function date_timezone_menu($may_cache) {
  if (!$may_cache) {
    $tz_name = variable_get('date_default_timezone_name', NULL);
    if ($_GET['q'] != 'admin/settings/date-time' && (empty($tz_name) || $tz_name == 'GMT')) {
      drupal_set_message(t('The Date Timezone module requires you to !link.', array('!link' => l(t('set the site timezone name'), 'admin/settings/date-time'))), 'error');
    }
  }
}

/**
 * Implementation of hook_form_alter().
 *
 * Override system handling of user and site timezone selection.
 */
function date_timezone_form_alter($form_id, &$form) {
  if ($form_id == 'system_date_time_settings') {
    date_timezone_site_form($form);
  }
  elseif ($form_id == 'user_edit' && variable_get('configurable_timezones', 1) && isset($form['timezone'])) {
    date_timezone_user_form($form);
  }
}

/**
 * Override form for the site timezone settings form.
 * Display a list of timezone names instead of offsets
 * and hide the offset value.
 */
function date_timezone_site_form(&$form) {
  $timezone = variable_get('date_default_timezone_name', NULL);
  $form['date_default_timezone'] = array(
    '#type' => 'select',
    '#title' => t('Default time zone'),
    '#default_value' => $timezone,
    '#options' => date_timezone_names(),
    '#description' => t('Select the default site time zone. If in doubt, choose the timezone that is closest to your location which has the same rules for daylight saving time.'),
    '#weight' => -10,
    '#validate' => array('date_timezone_update_site' => array()),
    '#offset' => variable_get('date_default_timezone', 0),
  );
}

/**
 * Override form for the user timezone settings form.
 * Display a list of timezone names instead of offsets
 * and hide the offset value.
 */
function date_timezone_user_form(&$form) {
  $account = $form['_account']['#value'];
  $form['timezone']['#validate'] = array('date_timezone_update_user' => array());
  $form['timezone']['#uid'] = $account->uid;
  $form['timezone']['timezone']['#type'] = 'hidden';
  $form['timezone']['timezone']['#value'] = $form['timezone']['timezone']['#default_value'];
  $timezone = $account->timezone_name ? $account->timezone_name : variable_get('date_default_timezone_name', NULL);

  $form['timezone']['timezone_name'] = array(
    '#type' => 'select',
    '#title' => t('Default time zone'),
    '#default_value' => $timezone,
    '#options' => date_timezone_names(),
    '#description' => t('Select your current local time.  If in doubt, choose the timezone that is closest to your location which has the same rules for daylight saving time. Dates and times throughout this site will be displayed using this time zone.'),
  );
  return $form;
}

/**
 * Callback from site timezone settings form to update site timezone info.
 * When the timezone name is updated, update the offset as well.
 */
function date_timezone_update_site($element) {
  $timezone = $element['#value'];
  if (empty($timezone)) {
    form_set_value($element, $element['#offset']);
  }
  else {
    variable_set('date_default_timezone_name', $timezone);
    $date = date_make_date('now', $timezone);
    form_set_value($element, date_offset_get($date));
  }
}

/**
 * Callback from user timezone settings form to update user timezone info.
 * When the timezone name is updated, update the offset as well.
 */
function date_timezone_update_user($element) {
  $timezone = $element['timezone_name']['#value'];
  if (!empty($timezone)) {
    $date = date_make_date('now', $timezone);
    $offset = date_offset_get($date);
    form_set_value($element['timezone'], $offset);
  }
}